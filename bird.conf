log syslog all;

include "/etc/bird/vars.conf";
include "/etc/bird/functions/neighbor.conf";

protocol device {
	scan time 10;
}

protocol kernel {
	scan time 20;
	ipv6 {
		import none;
		export filter {
			if net ~ allowed_prefix_v6 then {
				krt_prefsrc = OWNIPv6;
			}
			if bgp_large_community ~ [(MY_COMMUNITY, 3,*)] then reject;                  # Implement (asn, 3,*)   do not send to kernel
			if bgp_large_community ~ [(MY_COMMUNITY, 4,*)] then dest = RTD_UNREACHABLE;  # Implement (asn, 4,*)   send to kernel but mark unreachable
			if bgp_large_community ~ [(MY_COMMUNITY, 5,*)] then dest = RTD_BLACKHOLE;    # Implement (asn, 5,*)   send to kernel but mark blackhole
			kernel_route_hack();
			accept;
		};
	};
}

protocol static static_announce {
	route /48 unreachable;

	ipv6 {
		import filter {
			bgp_large_community.add((MY_COMMUNITY,204,0)); # customer
			bgp_large_community.add((MY_COMMUNITY,205,1)); # local
			bgp_large_community.add((MY_COMMUNITY,210,1)); # self net
			accept;
		};
		export none;
	};
}

template bgp pubebgp {
	local as OWNAS;
	path metric 1;
	interpret communities on;
	enforce first as on;
	allow local as 1;
	enable extended messages on;
	graceful restart yes;
	long lived graceful restart yes;

	ipv6 {
		add paths on;
		import none;
		export none;
		import keep filtered on;
		import limit 999 action block;
		export limit 999 action block;
	};
};

template bgp pubibgp {
	local as INETCONFEDAS;
	path metric 1;
	direct;
	enable extended messages on;
	confederation OWNAS;
	confederation member yes;
	graceful restart yes;
	long lived graceful restart yes;
	interpret communities off;
	source address IBGP_SOURCE_ADDR;

	ipv6 {
		next hop self yes;
		import where ibgp_import();
		export where ibgp_export();
		import limit 10000000 action block;
	};
};

include "ospf.conf";
#include "static/*.conf";
#include "sessions/down_prefix/*.conf";
include "sessions/*.conf";
