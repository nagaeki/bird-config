roa4 table rpki_cf_table4;
roa6 table rpki_cf_table6;
protocol rpki rpki_cf
{
	roa4 { table rpki_cf_table4; };
	roa6 { table rpki_cf_table6; };
	remote "rtr.rpki.cloudflare.com" port 8282;
	retry 300;
}

function make_unreachable(){
	bgp_large_community.add((MY_COMMUNITY,4,0));
	bgp_large_community.add((MY_COMMUNITY,2,0)); # do not send to anyone
	bgp_large_community.add((MY_COMMUNITY,1,0)); # do not send to ibgp
}

function do_rpki_check()
int last_asn;
{
	if bgp_path.len > 0 then{
		last_asn = bgp_path.last_nonaggregated;
	} else {
		last_asn = OWNAS;
	}
	if net.type = NET_IP4 then {
		if(roa_check(rpki_cf_table4, net, last_asn) = ROA_INVALID) then {
			print "[inet] ROA check failed for ", net, " ASN ", bgp_path.last;
			make_unreachable();
			return true;
		}
	}
	else if net.type = NET_IP6 then {
		if(roa_check(rpki_cf_table6, net, last_asn) = ROA_INVALID) then {
			print "[inet] ROA check failed for ", net, " ASN ", bgp_path.last;
			make_unreachable();
			return true;
		}
	}
	return true;
}
